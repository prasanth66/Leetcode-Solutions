class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if(triangle.size()==0)
            return 0;
        int dp[][]=new int[triangle.size()][];
        int ans=Integer.MAX_VALUE;
       
        for(int i=0;i<triangle.size();i++){
            dp[i]=new int[triangle.get(i).size()];
            for(int j=0;j<dp[i].length;j++){
                if(i-1>=0){
                    int sum=Integer.MAX_VALUE;
                    if(j-1>=0)
                        sum=Math.min(sum,dp[i-1][j-1]+triangle.get(i).get(j));
                    if(j<dp[i].length-1)
                        sum=Math.min(sum,dp[i-1][j]+triangle.get(i).get(j));
                    dp[i][j]=sum;
                }
                else
                    dp[i][j]=triangle.get(i).get(j);
                if(i==triangle.size()-1)
                   ans= Math.min(ans,dp[i][j]);
            }
        }
        
        return ans;
        
    }
}
